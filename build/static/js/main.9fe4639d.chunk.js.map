{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactItem/ContactItem.module.css"],"names":["module","exports","addNewContact","createAction","deleteContact","changeFilter","findContact","contacts","name","normName","toLowerCase","find","contact","itemsReducer","createReducer","state","payload","alert","id","indexOf","slice","filterReducer","contactsReducer","combineReducers","items","filter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistConfig","key","version","storage","blacklist","persistedContactsReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ContactForm","dispatch","useDispatch","nameId","uuid","numberId","useState","setName","number","setNumber","handleChange","useCallback","e","target","value","handleSubmit","preventDefault","className","s","form","onSubmit","htmlFor","type","onChange","pattern","title","required","btnForm","ContactItem","item","itemName","itemNumber","btnDel","onClick","hr","getFilteredContacts","getItems","getFilter","includes","ContactsList","useSelector","handleDeleteContact","map","Filter","findNameId","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9fe4639d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2NH5r\",\"btnForm\":\"ContactForm_btnForm__1IgW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Filter_contacts__2ZIwa\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const addNewContact = createAction('contacts/ADD')\r\n\r\nexport const deleteContact = createAction('contacts/DELETE')\r\n\r\nexport const changeFilter = createAction('contacts/CHANGE_FILTER')\r\n","import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { addNewContact, deleteContact, changeFilter } from './contacts-actions'\r\n\r\n// const preloadedState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: '',\r\n//   },\r\n// }\r\n\r\nconst findContact = (contacts, name) => {\r\n  const normName = name.toLowerCase()\r\n  return contacts.find((contact) => contact.name.toLowerCase() === normName)\r\n}\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addNewContact]: (state, { payload }) =>\r\n    !findContact(state, payload.name)\r\n      ? [...state, payload]\r\n      : alert(`${payload} is already in contact`),\r\n\r\n  [deleteContact]: (state, { payload }) => {\r\n    const id = state.indexOf(findContact(state, payload))\r\n    return [...state.slice(0, id), ...state.slice(id + 1)]\r\n  },\r\n})\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n})\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n})\r\n\r\nexport default contactsReducer\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport contactsReducer from './contacts/contacts-reducers'\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n}).concat(logger)\r\n\r\n// const preloadedState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: '',\r\n//   },\r\n// }\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  version: 1,\r\n  storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\nconst persistedContactsReducer = persistReducer(persistConfig, contactsReducer)\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistedContactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n","import { useState, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addNewContact } from '../../redux/contacts/contacts-actions'\r\nimport { v4 as uuid } from 'uuid'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch()\r\n  let nameId = uuid()\r\n  let numberId = uuid()\r\n\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target\r\n      name === 'name' ? setName(value) : setNumber(value)\r\n    },\r\n    [name, number],\r\n  )\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault()\r\n      const id = uuid()\r\n      dispatch(addNewContact({ id, name, number }))\r\n      setName('')\r\n      setNumber('')\r\n    },\r\n    [name, number],\r\n  )\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameId}>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id={nameId}\r\n        value={name}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n\r\n      <label htmlFor={numberId}>Number</label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        id={numberId}\r\n        value={number}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n\r\n      <button className={s.btnForm} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import s from './ContactItem.module.css'\r\n\r\nexport default function ContactItem({ contact, deleteContact }) {\r\n  const { id, name, number } = contact\r\n  const handleClick = (e) => deleteContact(e.target.name)\r\n\r\n  return (\r\n    <>\r\n      <li key={id} className={s.item}>\r\n        <p className={s.itemName}>{name}</p>\r\n        <p className={s.itemNumber}>{number}</p>\r\n        <button\r\n          className={s.btnDel}\r\n          type=\"button\"\r\n          name={name}\r\n          onClick={handleClick}\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n      <hr className={s.hr} />\r\n    </>\r\n  )\r\n}\r\n","export const getItems = (state) => state.contacts.items\r\nexport const getFilter = (state) => state.contacts.filter\r\n\r\nexport const getFilteredContacts = (state) => {\r\n  const contacts = getItems(state)\r\n  const filter = getFilter(state)\r\n\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter),\r\n  )\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport ContactItem from '../ContactItem/ContactItem'\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions'\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors'\r\n\r\nexport default function ContactsList() {\r\n  const contacts = useSelector(getFilteredContacts)\r\n  const dispatch = useDispatch()\r\n  const handleDeleteContact = (name) => dispatch(deleteContact(name))\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <ContactItem contact={contact} deleteContact={handleDeleteContact} />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n","import { useDispatch } from 'react-redux'\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions'\r\nimport { v4 as uuid } from 'uuid'\r\nimport s from './Filter.module.css'\r\n\r\nexport default function Filter() {\r\n  const findNameId = uuid()\r\n  const dispatch = useDispatch()\r\n  const handleFilter = (e) =>\r\n    dispatch(changeFilter(e.target.value.toLowerCase()))\r\n\r\n  return (\r\n    <div className={s.contacts}>\r\n      <label htmlFor={findNameId}>Find contact by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"findName\"\r\n        id={findNameId}\r\n        onChange={handleFilter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import './App.css'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport ContactsList from './components/ContactsList/ContactsList'\nimport Filter from './components/Filter/Filter'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './redux/store'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__Ro-ZV\",\"btnDel\":\"ContactItem_btnDel__yDN0R\",\"itemName\":\"ContactItem_itemName__1yAL8\",\"itemNumber\":\"ContactItem_itemNumber__3Lwms\",\"hr\":\"ContactItem_hr__35Gic\"};"],"sourceRoot":""}